• В чем отличие первичного ключа и уникального индекса?
• Первичный ключ - это уникальный идентификатор для каждой
записи в таблице, уникальный индекс - это индекс, который
также гарантирует уникальность значений в колонке, но
не обязательно должен быть использован как идентификатор записи.

• В каких случаях имеет смысл создавать индексы? Какие колонки следует включать в индекс и
почему?
Индексы имеет смысл создавать для колонок,
которые часто используются в условиях WHERE, JOIN, ORDER BY, GROUP BY.
Лучше всего включать в индекс колонки с низкой кардинальностью
(т.е. с небольшим количеством уникальных значений), чтобы ускорить запросы.

• Какие существуют способы внутренней организации индексов?
 Существуют два способа внутренней организации
 индексов в PostgreSQL: B-деревья и хеш-таблицы.
 Ещё кластеризованные и некластеризованные

• Рассказать о проблеме фрагментации индексов. Как бороться с фрагментацией?
Фрагментация индексов возникает при частом удалении
или обновлении записей, что приводит к физическому
размещению записей вне порядка индекса. Для борьбы
 с фрагментацией можно перестраивать или пересоздавать
  индексы, либо использовать методы, такие как CLUSTER или VACUUM FULL.

• Имеет ли значение порядок указания колонок при создании индекса?
Да, порядок указания колонок при создании индекса имеет
значение для оптимизации запросов в PostgreSQL SQL

• В чем разница между Index Scan и Index Seek?
 что Index Scan сканирует индекс по порядку и считывает
 данные из таблицы для каждого ключа,
 тогда как Index Seek использует индекс,
 чтобы быстро найти запись в таблице по ключу.

• В чем разница между секционированием и наследованием?
секционирование используется для управления большими объемами данных,
 тогда как наследование используется для создания иерархической структуры таблиц.

• Зачем нужен ANALYZE?
ANALYZE собирает статистическую информацию
о содержимом таблиц в базе данных и
сохраняет результаты в системном каталоге pg_statistic.

• Могут ли индексы ухудшить производительность? Если да, то продемонстрировать это.
Во-первых, индексы не всегда улучшают производительность. Слишком много неверно созданных индексов
превращают систему в болото и понижают производительность запросов.

• На что влияет порядок сортировки (ASC\DESC) при создании индекса? Продемонстрировать
это.
Если в запросе не указан порядок сортировки, то PostgreSQL может
использовать любой из индексов, которые могут быть
эффективно использованы для поиска данных.

• Продемонстрировать полезность индекса по выражению.
• Продемонстрировать полезность частичного индекса.